class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        int n = nums.size();
        int s = 1;
        int l = nums.size()-2;
        sort(nums.begin(), nums.end());
        vector<vector<int>> res;
        for(int i = 0; i<n; i++){
            if(i == 0 || nums[i] != nums[i-1]){
                int s = i +1,  l = nums.size() - 1, sum = 0 - nums[i];
                while(s<l){
               if(nums[s] + nums[l] + nums[i] == 0){
                   vector <int> tem;
                   tem.push_back(nums[i]);
                   tem.push_back(nums[l]);
                   tem.push_back(nums[s]);
                    res.push_back(tem);
                   while(s<l && nums[s] == nums[s+1]){
                       s++;
                       }
                    while(s<l && nums[l] == nums[l-1]){
                       l--;
                       }
                    s++;
                    l--;
                                      
               }else if(nums[s] + nums[l]  < sum){
                   s++;
               }else if(nums[s] + nums[l] > 0){
                   l--;
               }
                
            }
            }
        }
        return res;
    }
};
